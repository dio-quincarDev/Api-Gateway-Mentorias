server:
  port: 8084
spring:
  data:
    r2dbc:
      repositories:
        enabled: true

  r2dbc:
    url:  r2dbc:postgresql://localhost:5432/kafka
    username: postgres
    password: diogenes

  cloud:
    function:
      definition: gameCreatedBinding;
    stream:
      default-binder: kafka_default
      bindings:
        gameCreatedBinding-in-0:
          destination: event.game-created
          binder: kafka_default
          useNativeDecoding: true
        gameCreatdedBinding-out-0:
          destination: event.game-elegible
          binder: kafka_default
          useNativeDecoding: true

      binders:
        kafka_default:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    default:
                      conmsumer:
                        configuration:
                          session.timeout.ms: 10000
                          max.poll.records: 10
                      producer:
                        compressiontype: gzip
                        configuration:
                          max.request.size: 1000000
                      binder:
                        autoAddPartitions: true
                        autoCreateTopics: true
                        requiredAcks: -1
                        minPartitionCount: 3
                        replicationFactor: 1
                        serdeError: logAndContinue
                        broker: localhost:9092




